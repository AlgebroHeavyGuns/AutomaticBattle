/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import automaticbattle.Controlador;
import automaticbattle.Unidad;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.text.DefaultCaret;

/**
 *
 * @author Algebro
 */
public class CombatePanel extends javax.swing.JPanel {

    /**
     * Creates new form CombatePanel
     */
    
    VentanaDeJuego vj;
    Timer T;
    boolean automatic=false;
    
    public CombatePanel(VentanaDeJuego VJ) {
        initComponents();
        this.vj = VJ;
        this.region1.generateZone();
        this.region1.setMap(Controlador.getInstance().combateActual.getTablero());
        backgroundPanel1.setBackground("src/Images/backgrounds/dark1.jpg");
        DefaultCaret caret = (DefaultCaret)infoPanel.getCaret();
        caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
        this.estadisticas.setVisible(false);
        iniciaCombate();
        vj.setTitle(Controlador.GAME_NAME + " - " + Controlador.getInstance().combateActual.getNombre());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backgroundPanel1 = new GUI.BackgroundPanel();
        region1 = new GUI.Region();
        nextTurnButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        infoPanel = new javax.swing.JTextArea();
        nextUnidadButton = new javax.swing.JButton();
        turn25Button = new javax.swing.JButton();
        automaticButton = new javax.swing.JButton();
        turn10Button = new javax.swing.JButton();
        estadisticas = new javax.swing.JButton();
        time = new javax.swing.JTextField();
        salud = new javax.swing.JButton();
        nextUnit1 = new javax.swing.JLabel();
        nextUnit2 = new javax.swing.JLabel();
        nextUnit3 = new javax.swing.JLabel();
        nextUnit4 = new javax.swing.JLabel();

        region1.setPreferredSize(new java.awt.Dimension(560, 560));

        nextTurnButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        nextTurnButton.setText("SIGUIENTE TURNO");
        nextTurnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextTurnButtonActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(infoPanel);
        jScrollPane1.setAutoscrolls(true);

        infoPanel.setEditable(false);
        infoPanel.setColumns(20);
        infoPanel.setFont(new java.awt.Font("Monospaced", 1, 11)); // NOI18N
        infoPanel.setRows(5);
        infoPanel.setDoubleBuffered(true);
        jScrollPane1.setViewportView(infoPanel);

        nextUnidadButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        nextUnidadButton.setText("TURNO MISMA UNIDAD");
        nextUnidadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextUnidadButtonActionPerformed(evt);
            }
        });

        turn25Button.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        turn25Button.setText("x25 TURNOS");
        turn25Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                turn25ButtonActionPerformed(evt);
            }
        });

        automaticButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        automaticButton.setText("AUTOMÁTICO");
        automaticButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                automaticButtonActionPerformed(evt);
            }
        });

        turn10Button.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        turn10Button.setText("x10 TURNOS");
        turn10Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                turn10ButtonActionPerformed(evt);
            }
        });

        estadisticas.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        estadisticas.setText("VER ESTADÍSTICAS");
        estadisticas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estadisticasActionPerformed(evt);
            }
        });

        time.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        time.setForeground(new java.awt.Color(51, 255, 204));
        time.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        time.setText("1");

        salud.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons/corazon (2).png"))); // NOI18N
        salud.setBorderPainted(false);
        salud.setContentAreaFilled(false);
        salud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saludActionPerformed(evt);
            }
        });

        nextUnit1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/units/Beast1.png"))); // NOI18N

        nextUnit2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/units/Beast1.png"))); // NOI18N

        nextUnit3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/units/Beast1.png"))); // NOI18N

        nextUnit4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/units/Beast1.png"))); // NOI18N

        javax.swing.GroupLayout backgroundPanel1Layout = new javax.swing.GroupLayout(backgroundPanel1);
        backgroundPanel1.setLayout(backgroundPanel1Layout);
        backgroundPanel1Layout.setHorizontalGroup(
            backgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(region1, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(backgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backgroundPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 434, Short.MAX_VALUE))
                    .addGroup(backgroundPanel1Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(backgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nextUnit1)
                            .addComponent(nextUnit4)
                            .addComponent(nextUnit3)
                            .addComponent(nextUnit2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(backgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backgroundPanel1Layout.createSequentialGroup()
                                .addGroup(backgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(backgroundPanel1Layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(salud, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(backgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(turn10Button, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(automaticButton, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(turn25Button, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nextUnidadButton, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(nextTurnButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(estadisticas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        backgroundPanel1Layout.setVerticalGroup(
            backgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(backgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backgroundPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(backgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(backgroundPanel1Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(backgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(automaticButton)
                                    .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(7, 7, 7)
                                .addGroup(backgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(salud, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(backgroundPanel1Layout.createSequentialGroup()
                                        .addComponent(turn10Button)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(turn25Button)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(nextUnidadButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(nextTurnButton)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(estadisticas))
                            .addGroup(backgroundPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(nextUnit1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nextUnit2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nextUnit3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nextUnit4))))
                    .addComponent(region1, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroundPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroundPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    
    private void nextTurnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextTurnButtonActionPerformed
        Controlador.getInstance().combateActual.nextTurn();
        drawMap();
    }//GEN-LAST:event_nextTurnButtonActionPerformed

    private void nextUnidadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextUnidadButtonActionPerformed
        Unidad actual = Controlador.getInstance().combateActual.getColaTurno().get(0);
        Controlador.getInstance().combateActual.nextTurn();
        while(Controlador.getInstance().combateActual.getColaTurno().get(0) != actual &&
                Controlador.getInstance().combateActual.combateEnEjecuccion())
            Controlador.getInstance().combateActual.nextTurn();
        drawMap();
    }//GEN-LAST:event_nextUnidadButtonActionPerformed

    private void turn25ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_turn25ButtonActionPerformed
        for(int i=0;i<25;i++)
            if(Controlador.getInstance().combateActual.combateEnEjecuccion())
                            Controlador.getInstance().combateActual.nextTurn();
        
        drawMap();
    }//GEN-LAST:event_turn25ButtonActionPerformed

    private void automaticButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_automaticButtonActionPerformed

        if(automatic){
            T.cancel();
        }else{  
            T = new Timer();
            double clock;
            try{
                clock = Double.parseDouble(time.getText());
                if(clock < 0.01)
                    clock=0.01;
                else if(clock > 5)
                    clock=5;
            }catch(NumberFormatException E){
                clock=1;
            }
            time.setText("" + clock);
            T.scheduleAtFixedRate(new TimerTask(){
                @Override
                public void run() {
                    Controlador.getInstance().combateActual.nextTurn();
                    drawMap();
                }
            }
                    , 0, (long)(1000*clock));
        }
        automatic=!automatic;
        setAllButtons(!automatic, true);
    }//GEN-LAST:event_automaticButtonActionPerformed

    private void turn10ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_turn10ButtonActionPerformed
        for(int i=0;i<10;i++)
            if(Controlador.getInstance().combateActual.combateEnEjecuccion())
                Controlador.getInstance().combateActual.nextTurn();
        
        drawMap();
    }//GEN-LAST:event_turn10ButtonActionPerformed

    private void estadisticasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estadisticasActionPerformed
        vj.setPanel(new EstadisticasPanel(this.vj));
    }//GEN-LAST:event_estadisticasActionPerformed

    private void saludActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saludActionPerformed
        String S = "";
        for(Unidad U: Controlador.getInstance().combateActual.getEquipoUno())
            S += U.getNombre()+ " (" +  U.getVida() + " | " + U.getEnergia() + ")\n";
        for(Unidad U: Controlador.getInstance().combateActual.getEquipoDos())
            S += U.getNombre()+ " (" +  U.getVida() + " | " + U.getEnergia() + ")\n";
        this.insertarInfo(S);
    }//GEN-LAST:event_saludActionPerformed

    public void setAllButtons(boolean bool, boolean autom){
        automaticButton.setEnabled(autom);
        time.setEnabled(bool);
        turn25Button.setEnabled(bool);
        turn10Button.setEnabled(bool);
        nextUnidadButton.setEnabled(bool);
        nextTurnButton.setEnabled(bool);
    }
    
    public void cancelarTimmer(){
        if(T!=null)
            T.cancel();
    }
    
    void iniciaCombate(){
        Controlador.getInstance().combateActual.panel = this;
        Controlador.getInstance().combateActual.iniciaCombate();
        drawMap();
    }
    
    public void activarEstadisticas(){
        setAllButtons(false, false);
        this.estadisticas.setVisible(true);
        this.estadisticas.setEnabled(true);
    }
    
    public synchronized void insertarInfo(String info){
        this.infoPanel.setText(infoPanel.getText()+info+"\n");
    }
    
    public void drawMap(){
        region1.drawMap(Controlador.getInstance().combateActual.getColaTurno().get(0).getPosX(),
                Controlador.getInstance().combateActual.getColaTurno().get(0).getPosY());
        this.nextUnit1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/units/" +
                Controlador.getInstance().combateActual.getColaTurno().get(0).getImagen())));
        if(Controlador.getInstance().combateActual.getColaTurno().size() > 1)
            this.nextUnit2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/units/" +
                Controlador.getInstance().combateActual.getColaTurno().get(1).getImagen())));
        else
            this.nextUnit2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons/libro.png")));
        if(Controlador.getInstance().combateActual.getColaTurno().size() > 2)
            this.nextUnit3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/units/" +
                Controlador.getInstance().combateActual.getColaTurno().get(2).getImagen())));
        else
            this.nextUnit3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons/libro.png")));
        if(Controlador.getInstance().combateActual.getColaTurno().size() > 3)
            this.nextUnit4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/units/" +
                Controlador.getInstance().combateActual.getColaTurno().get(3).getImagen())));
        else
            this.nextUnit4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons/libro.png")));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton automaticButton;
    private GUI.BackgroundPanel backgroundPanel1;
    private javax.swing.JButton estadisticas;
    private javax.swing.JTextArea infoPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton nextTurnButton;
    private javax.swing.JButton nextUnidadButton;
    private javax.swing.JLabel nextUnit1;
    private javax.swing.JLabel nextUnit2;
    private javax.swing.JLabel nextUnit3;
    private javax.swing.JLabel nextUnit4;
    private GUI.Region region1;
    private javax.swing.JButton salud;
    private javax.swing.JTextField time;
    private javax.swing.JButton turn10Button;
    private javax.swing.JButton turn25Button;
    // End of variables declaration//GEN-END:variables
}
